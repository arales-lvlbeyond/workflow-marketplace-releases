<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2021 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://levelsbeyond.com/schema/workflow"
	xmlns:nimbus="http://levelsbeyond.com/schema/workflow/nimbus"
	xsi:schemaLocation="http://levelsbeyond.com/schema/workflow https://edge.reachengine.com/reachengine/api/workflows/schema/studio.xsd"
	id="getProjectRootIdsForTeam"
	name="getProjectRootIdsForTeam"
	executionLabelExpression="getProjectRootIdsForTeam - Team ID: ${team_id}"
	subjectDOClassName=""
	showInUserInterface="false"
	adminOnly="true"
	sdkVersion=""
>

	<initialStepName>get teams projects</initialStepName>
	
	<submitHttpStep name="get teams projects"
		urlExpression="https://api.frame.io/v2/teams/${team_id}/projects"
		responseCodeDataDef="responseCode"
		responsePayloadDataDef="responsePayload"
		requestMethodExpression="GET"
	>
		<transition condition="${responseCode.startsWith('2')}">
			<targetStepName>build metadata import csv</targetStepName>
		</transition>
		<transition condition="${true}">
			<targetStepName>request failed</targetStepName>
		</transition>
		
		<requestHeader name="Authorization">Bearer ${bearerToken}</requestHeader>

	</submitHttpStep>
	
	<groovyStep name="build metadata import csv"
		resultDataDef="result"
	>
		<transition condition="${ result.size() &gt; 0 }">
			<targetStepName>save list of ids</targetStepName>
		</transition>
		<transition condition="${true}">
			<targetStepName>request failed</targetStepName>
		</transition>
		<script>
			<![CDATA[
			import groovy.json.*
			import groovy.json.JsonSlurper
			import com.csvreader.CsvWriter
			import com.csvreader.CsvReader
			
			
			def list = []
			
			responsePayload.each { project ->
				def projectMap = new JsonSlurper().parseText(project.toString())
				def map = [:]
				
//				map.Value = projectMap.get('id').replace('-', '')
				map.root_asset_id = projectMap.get('root_asset_id')
				map.projectName = projectMap.get('name')
				list.add(map)
			}
			
			return list
			]]>
		</script>
	</groovyStep>
	
	<setContextData name="save list of ids"
		targetDataDef="root_asset_ids"
		valueExpression="${result.![#this.get('root_asset_id').asText()]}"
		nextStep="end"
	/>
	
	<!-- ................................................... End Steps .................................................... -->
	<failWorkflowStep name="request failed"
		reasonExpression="request failed"
	/>
	
	<!-- success -->
	<noopStep name="end" />
	<!-- ................................................... Data Defs .................................................... -->
	<!-- ............ INPUT ............. -->
	<contextDataDef name="team_id"               dataType="String"   userInput="true"    required="true" />
	<contextDataDef name="bearerToken"              dataType="String"   label="Frame.io Token (defaults to configured token)"    userInput="true"    required="false"    defaultDataExpression="${#sysconfig('workflow.frameio.bearerToken')}"/>
	<contextDataDef name="resultFile"               dataType="File"     defaultDataExpression="${ #sysconfig('filesystem.root.temp') + '/' + team_id }_${#uuid()}.csv" />
	<!-- ......... PROCESSING ........... -->
	<contextDataDef name="responseCode"             dataType="String" />
	<contextDataDef name="responsePayload"          dataType="JSON"     multiple="true"/>
	
	<contextDataDef name="result"                   dataType="JSON"     multiple="true" />
	<contextDataDef name="root_asset_ids"           dataType="String"   multiple="true" />
	
 
</workflow>