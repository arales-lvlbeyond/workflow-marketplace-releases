<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2020 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://levelsbeyond.com/schema/workflow"
	xmlns:nimbus="http://levelsbeyond.com/schema/workflow/nimbus"
	xsi:schemaLocation="http://levelsbeyond.com/schema/latest http://schema.levelsbeyond.com/latest/studio.xsd"
	id="getOrCreateProject"
	name="Get or Create Project"
	executionLabelExpression="Get or Create Project | Account ID: ${accountId}"
	subjectDOClassName=""
	showInUserInterface="false"
	group="Frame.io"
	sdkVersion=""
	hasDownload="false"
	resultDataDef="frameioProjectResponseJson"
>
	
	<initialStepName>Check if project exists</initialStepName>
	
	<submitHttpStep name="Check if project exists"
		executionLabelExpression="GET: ${frameioURL}/search/projects?q=${projectName.replaceAll(' ','%20')}&amp;account_id=${accountId}"
		urlExpression="${frameioURL}/search/projects?q=${projectName.replaceAll(' ','%20')}&amp;account_id=${accountId}"
		requestMethodExpression="GET"
		responseCodeDataDef="frameioProjectResponseCode"
		responsePayloadDataDef="frameioProjectResponseJson"
	>
		<transition condition="${frameioProjectResponseCode.startsWith('2') AND frameioProjectResponseJson.get('name').asText() == projectName }">
			<targetStepName>end</targetStepName>
		</transition>
		<transition condition="${frameioProjectResponseCode.startsWith('2')}">
			<targetStepName>Create project</targetStepName>
		</transition>
		<transition condition="${true}">
			<targetStepName>Frame.io HTTP Error</targetStepName>
		</transition>
		
		<requestHeader name="Authorization">Bearer ${frameBearer}</requestHeader>
	</submitHttpStep>
	
	<!--	Create Frame.io project -->
	<submitHttpStep name="Create project"
		urlExpression="${frameioURL}/teams/${rootAssetId}/projects"
		requestMethodExpression="POST"
		responseCodeDataDef="frameioProjectResponseCode"
		responsePayloadDataDef="frameioProjectResponseJson"
	>
		<transition condition="${frameioProjectResponseCode.startsWith('2') AND ( frameioProjectResponseJson == null OR frameioProjectResponseJson.isNull() )}">
			<targetStepName>Frame.io JSON Response Error</targetStepName>
		</transition>
		<transition condition="${frameioProjectResponseCode.startsWith('2')}">
			<targetStepName>end</targetStepName>
		</transition>
		<transition condition="${true}">
			<targetStepName>Frame.io HTTP Error</targetStepName>
		</transition>
		
		<requestPayloadItem name="body">${jsonBody.toString()}</requestPayloadItem>
		<requestHeader name="Content-Type">application/json</requestHeader>
		<requestHeader name="Authorization">Bearer ${frameBearer}</requestHeader>
	</submitHttpStep>
	
	<!-- ................................................... End Steps .................................................... -->
	<!-- success -->
	<noopStep name="end"/>
	
	<failWorkflowStep name="Frame.io JSON Response Error"
		reasonExpression="Error Retrieving Frame.io JSON Response"/>
	
	<failWorkflowStep name="Frame.io HTTP Error"
		reasonExpression="Error contacting Frame.io. Error code: ${frameioProjectResponseCode}"/>
	
	<!-- ................................................... Data Defs .................................................... -->
	<!-- ............ INPUT ............. -->
	<contextDataDef name="accountId" dataType="String" />
	<contextDataDef name="frameioURL" dataType="String" />
	<contextDataDef name="frameBearer" dataType="String" hidden="true" />
	<contextDataDef name="rootAssetId" dataType="String" />
	<contextDataDef name="projectName" dataType="String" />
	<contextDataDef name="isPrivate" dataType="Boolean" defaultDataExpression="false" />
	
	<!-- ......... PROCESSING ........... -->
	<contextDataDef name="frameioProjectResponseCode"  dataType="String"/>
	<contextDataDef name="frameioProjectResponseString" dataType="String"/>
	<contextDataDef name="frameioProjectResponseJson" dataType="JSON"/>
	
	<contextDataDef name="projectRootAssetId" dataType="String"/>
	
	<contextDataDef name="jsonBody" dataType="JSON">
		<defaultDataExpression>
			<![CDATA[
			{
			"name" : "${projectName}",
			"private" : "${isPrivate}",
			"project_preferences": {
			"notify_on_updated_label": "false",
			"notify_on_new_mention": "false",
			"notify_on_new_comment": "false",
			"notify_on_new_collaborator": "false",
			"notify_on_new_asset": "false",
			"collaborator_can_share": "true",
			"collaborator_can_invite": "true",
			"collaborator_can_download": "true"
			}
			}
			]]>
		</defaultDataExpression>
	</contextDataDef>

</workflow>