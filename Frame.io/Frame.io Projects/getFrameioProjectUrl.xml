<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2020 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://levelsbeyond.com/schema/workflow"
	xmlns:nimbus="http://levelsbeyond.com/schema/workflow/nimbus"
	xsi:schemaLocation="http://levelsbeyond.com/schema/latest http://schema.levelsbeyond.com/latest/studio.xsd"
	id="getFrameioProjectUrl"
	name="Get Frame.io Project URL"
	executionLabelExpression="Get Frame.io Project URL | ${projectRootAssetId}"
	subjectDOClassName=""
	showInUserInterface="false"
	group="Frame.io"
	sdkVersion=""
	hasDownload="false"
	resultDataDef="projectUrl"
>
	
	<initialStepName>get project id</initialStepName>
	
	<runCommandStep name="get project id"
		executionLabelExpression="Get project ID for asset: ${projectRootAssetId}"
		executablePathExpression="/usr/bin/curl"
		stdoutDataDef="frameioResponseJson"
		resultCodeDataDef="frameioResponseCode"
	>
		<transition condition="${ frameioResponseJson == null OR frameioResponseJson.isNull() }">
			<targetStepName>Frame.io JSON Response Error</targetStepName>
		</transition>
		<transition condition="${ frameioAccountResponseCode != 0 }">
			<targetStepName>Frame.io HTTP Error</targetStepName>
		</transition>
		<transition condition="${true}">
			<targetStepName>set project id</targetStepName>
		</transition>
		
		<arg>--request</arg>
		<arg>GET</arg>
		<arg>--url</arg>
		<arg>${frameioURL}/assets/${projectRootAssetId}</arg>
		<arg>--header</arg>
		<arg>Authorization: Bearer ${frameBearer}</arg>
		<arg>--header</arg>
		<arg>Content-Type: application/json</arg>
	</runCommandStep>
	
	<setContextData name="set project id"
		devStep="true"
		targetDataDef="projectId"
		valueExpression="${frameioResponseJson.project_id}"
		nextStep="set project url"
		/>
	
	<setContextData name="set project url"
		executionLabelExpression="Set URL for project ID: ${projectId}"
		targetDataDef="projectUrl"
		valueExpression="https://app.frame.io/projects/${projectId}"
		nextStep="end"
		/>
	
	<!-- ................................................... End Steps .................................................... -->
	<!-- success -->
	<noopStep name="end"/>
	
	<failWorkflowStep name="Frame.io JSON Response Error"
		reasonExpression="Error Retrieving Frame.io JSON Response"/>
	
	<failWorkflowStep name="Frame.io HTTP Error"
		reasonExpression="Error contacting Frame.io. Error code: ${frameioAccountResponseCode}"/>
	
	<!-- ................................................... Data Defs .................................................... -->
	<!-- ............ INPUT ............. -->
	<contextDataDef name="projectRootAssetId" dataType="String"/>
	
	<!-- ......... PROCESSING ........... -->
	<contextDataDef name="frameioURL"               dataType="String"       defaultDataExpression="https://api.frame.io/v2"/>
	<contextDataDef name="frameBearer"              dataType="String"       defaultDataExpression="${#sysconfig('workflow.frameio.bearerToken')}"   hidden="true"/>
	<contextDataDef name="projectId" dataType="String"/>
	<contextDataDef name="projectUrl" dataType="String"/>
	
	<contextDataDef name="frameioResponseCode"  dataType="Integer"/>
	<contextDataDef name="frameioResponseString" dataType="String"/>
	<contextDataDef name="frameioResponseJson" dataType="JSON"/>


</workflow>