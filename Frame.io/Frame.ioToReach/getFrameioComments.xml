<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2020 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://levelsbeyond.com/schema/workflow"
	xmlns:nimbus="http://levelsbeyond.com/schema/workflow/nimbus"
	xsi:schemaLocation="http://levelsbeyond.com/schema/latest http://schema.levelsbeyond.com/latest/studio.xsd"
	id="getFrameioComments"
	name="Get Frame.io Comments"
	executionLabelExpression="Get Frame.io Comments | ${subject.name}"
	subjectDOClassName="AssetMaster"
	showInUserInterface="true"
	group="Frame.io"
	adminOnly="true"
	sdkVersion=""
	hasDownload="false"
>
	
	<initialStepName>Get Comments JSON for Existing Asset</initialStepName>


	<submitHttpStep name="Get Comments JSON for Existing Asset"
		urlExpression="${frameioURL}${frameioId}/comments"
		requestMethodExpression="GET"
		responseCodeDataDef="frameioResponseCode"
		responsePayloadDataDef="frameioResponseJson"
		>
		<transition condition="${ frameioResponseCode.startsWith('2') AND frameioResponseJson != null }">
			<targetStepName>concatenate comments</targetStepName>
		</transition>
		<transition condition="${true}">
			<targetStepName>comments not available</targetStepName>
		</transition>
		
		<requestHeader name="Content-Type">application/json</requestHeader>
		<requestHeader name="Authorization">Bearer ${frameBearer}</requestHeader>
	</submitHttpStep>
	
	<groovyStep name="concatenate comments"
		executionLabelExpression="Convert JSON response to comma separated String"
		resultDataDef="commentText"
		>
		<transition condition="${ commentText != null OR commentText != '' }">
			<targetStepName>Save frameioComment</targetStepName>
		</transition>
		<transition condition="${end}">
			<targetStepName>end</targetStepName>
		</transition>
		<script>
			<![CDATA[
			import groovy.json.JsonSlurper
			
			String commentString = ''
			def jsonSlurper = new JsonSlurper()
			def commentData = jsonSlurper.parseText(frameioResponseJson.toString())
			
			commentData.each { comment ->
				String text = comment.text
				String frame = comment.frame
				String date = comment.inserted_at.substring(0,16)
				String user = comment.owner.name
				
				if (text != null) {
					commentString += (commentString != '' ? '\n' : '') + text + ',' + frame + ',' + date + ',' + user
				}
			}
			
			return commentString
			
			]]>
		</script>
	</groovyStep>
	
	<nimbus:setMetadataValueStep name="Save frameioComment"
		targetExpression="${subject}"
		propertyNameExpression="${frameioCommentFieldName}"
		valueExpression="${commentText}"
		nextStep="comments added"/>
	
	<!-- ................................................... End Steps .................................................... -->
	<!-- success -->
	<noopStep name="end"/>
	
	<failWorkflowStep name="comments not available" reasonExpression="Could not retrieve comments (HTTP ${frameioResponseCode})" />
	
	<createSuccessNotificationStep name="comments added" notificationTypeExpression="success" notificationBodyExpression="Frame.io comments have successfully been retrieved. (HTTP ${frameioResponseCode})" />
	
	
	<!-- ................................................... Data Defs .................................................... -->
	<!-- ............ INPUT ............. -->
	<contextDataDef name="frameioId" label="Frame.io ID" dataType="String" userInput="false" defaultDataExpression="${subject.metadata.frameioID}"/>
	
	
	<!-- ......... PROCESSING ........... -->
	<contextDataDef name="frameioURL" dataType="String" defaultDataExpression="https://api.frame.io/v2/assets/"/>
	<contextDataDef name="frameBearer" dataType="String" defaultDataExpression="${#sysconfig('workflow.frameio.bearerToken')}"/>
	<contextDataDef name="frameioResponseCode" dataType="String"/>
	<contextDataDef name="frameioResponseJson" dataType="JSON" multiple="true"/>
	
	<contextDataDef name="commentText" dataType="String" />
	<contextDataDef name="frameioCommentFieldName" dataType="String" defaultDataExpression="${#sysconfig('workflow.field.names.frameioComment') ?: 'frameioComment'}"/>
	
</workflow>