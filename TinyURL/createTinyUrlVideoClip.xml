<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2019 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns="http://levelsbeyond.com/schema/workflow"
		xmlns:nimbus="http://levelsbeyond.com/schema/workflow/nimbus"
		xsi:schemaLocation="http://levelsbeyond.com/schema/latest http://www.levelsbeyond.com/schema/latest/studio.xsd"
		id="createTinyUrlVideoClip"
		name="Create Tiny URL Video Clip"
		executionLabelExpression="Create Tiny URL on Video Clip | ${linkToAsset}"
		subjectDOClassName="VideoClip"
		showInUserInterface="true"
		sdkVersion=""
>

	<initialStepName>encode url</initialStepName>


	<groovyStep name="encode url"
			resultDataDef="encodedURL"
			pctComplete="100">
		<transition condition="=true">
			<targetStepName>generate tiny url</targetStepName>
		</transition>
		<script>
			<![CDATA[
				String linkToAsset = URLEncoder.encode(linkToAsset);
				String tUrl = binding.getVariable("tinyUrl");
				return tUrl+linkToAsset
			]]>
		</script>
	</groovyStep>
	
	<submitHttpStep name="generate tiny url"
			urlExpression="${encodedURL}"
			requestMethodExpression="POST"
			responseCodeDataDef="tinyUrlCodeResponse"
			responsePayloadDataDef="tinyUrlPayloadResponse"
			continueOnException="true">
		<transition condition="${tinyUrlCodeResponse == 200}">
			<targetStepName>save link</targetStepName>
		</transition>
		<transition condition="${true}">
			<targetStepName>error getting api response</targetStepName>
		</transition>
	</submitHttpStep>
	

	
	<setAssociationMetadataStep name="save link"
			targetExpression="${subject}"
			propertyNameExpression="shortUrl"
			valueExpression="{&quot;title&quot;: &quot;${tinyUrlPayloadResponse}&quot;, &quot;url&quot;: &quot;${tinyUrlPayloadResponse}&quot;}"
		>
		<exception-transition type="WorkflowException">
			<targetStepName>error saving link</targetStepName>
		</exception-transition>
		<exception-transition type="AssetException">
			<targetStepName>error saving link</targetStepName>
		</exception-transition>
		<exception-transition type="NullPointerException">
			<targetStepName>error saving link</targetStepName>
		</exception-transition>
		<exception-transition type="Exception">
			<targetStepName>error saving link</targetStepName>
		</exception-transition>
		<transition condition="${true}">
			<targetStepName>short url available</targetStepName>
		</transition>
	</setAssociationMetadataStep>
	
	<createSuccessNotificationStep name="short url available"
			notificationTypeExpression="success"
			notificationBodyExpression="Your short URL is available. Please refresh the page."
			nextStep="end"
	/>
	
		
	
	<!-- ................................................... End Steps .................................................... -->
	<!-- success -->
	<noopStep name="end"/>
	
	<failWorkflowStep name="error getting api response" reasonExpression="Error getting Tiny URL response. Response code: ${authResponseCode}"/>
	
	<failWorkflowStep name="error saving link" reasonExpression="Error saving the asset metadata"/>
	
	<!-- ................................................... Data Defs .................................................... -->
	<!-- ............ INPUT ............. -->
	
	
	
	<!-- ......... PROCESSING ........... -->
	<contextDataDef name="reachUrl"             dataType="String"       defaultDataExpression="${#sysconfig('workflow.reach.url')}"/>
	<contextDataDef name="linkToAsset"          dataType="String"       defaultDataExpression="${reachUrl}/#/assets?focusedAssetId=${subject.id}&amp;focusedAssetType=video_clip" />
	<contextDataDef name="tinyUrl"              dataType="String"       defaultDataExpression="https://tinyurl.com/api-create.php?url="/>
	<contextDataDef name="tinyUrlPayloadResponse"   dataType="String"/>
	<contextDataDef name="tinyUrlCodeResponse"      dataType="Integer"/>
	<contextDataDef name="encodedURL"   dataType="String"/>
	<contextDataDef name="filter"       dataType="String"/>

</workflow>