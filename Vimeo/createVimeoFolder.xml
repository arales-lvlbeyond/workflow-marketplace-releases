<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2020 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://levelsbeyond.com/schema/workflow"
	xmlns:nimbus="http://levelsbeyond.com/schema/workflow/nimbus"
	xsi:schemaLocation="http://levelsbeyond.com/schema/latest http://schema.levelsbeyond.com/latest/studio.xsd"
	id="createVimeoFolder"
	name="Create Vimeo Folder"
	executionLabelExpression="Create Vimeo Folder: ${folderName}"
	subjectDOClassName=""
	showInUserInterface="true"
	resultDataDef="vimeoProjectInfo"
	sdkVersion=""
>
	
	<initialStepName>create vimeo project folder</initialStepName>
	
	
	<submitHttpStep name="create vimeo project folder"
		executionLabelExpression="Creating Vimeo Project Folder ${folderName}"
		urlExpression="https://api.vimeo.com/me/projects"
		requestMethodExpression="POST"
		responsePayloadDataDef="vimeoResponseBody"
		responseCodeDataDef="vimeoResponseCode">
		<transition condition="${vimeoResponseCode.contains('201')}">
			<targetStepName>save vimeo project ID as context data</targetStepName>
		</transition>
		<transition condition="${true}">
			<targetStepName>http error</targetStepName>
		</transition>
		<requestHeader name="Authorization">Bearer ${vimeoAccessToken}</requestHeader>
		<requestHeader name="Content-Type">application/json</requestHeader>
		<requestHeader name="Accept">application/vnd.vimeo.*+json;version=3.4</requestHeader>
		<requestPayloadItem name="body">
			{
			"name": "${folderName}"
			}
		</requestPayloadItem>
	</submitHttpStep>
	
	<setContextData name="save vimeo project ID as context data"
		executionLabelExpression="Project ID: ${vimeoResponseBody.uri.split('/')[4]}"
		nextStep="end">
		<set targetDataDef="vimeoProjectInfo">
			<![CDATA[
				{
					"vimeoProjectId": "${vimeoResponseBody.uri.split('/')[4]}",
					"vimeoProjectLink": "https://vimeo.com/manage/folders/${vimeoResponseBody.uri.split('/')[4]}"
				}
			]]>
		</set>
	</setContextData>
	
	<!-- ................................................... End Steps .................................................... -->
	<!-- success -->
	<noopStep name="end"/>
	
	<createFailureNotificationStep name="http error"
		notificationTypeExpression="error"
		notificationBodyExpression="Could not send to Vimeo. HTTP Error code ${vimeoResponseCode}"/>
	<!-- ................................................... Data Defs .................................................... -->
	<!-- ............ INPUT ............. -->
	<contextDataDef name="folderName"       dataType="String"   userInput="true" />
	
	<!-- ......... PROCESSING ........... -->
	<contextDataDef name="vimeoAccessToken" dataType="String" defaultDataExpression="${#sysconfig('marketplace.vimeo.access.token')}" hidden="true"/>
	<contextDataDef name="vimeoResponseBody" dataType="JSON"/>
	<contextDataDef name="vimeoResponseCode" dataType="String"/>
	<contextDataDef name="vimeoProjectInfo" dataType="JSON"   />
	<contextDataDef name="vimeoProjectId"   dataType="String" />
	<contextDataDef name="vimeoProjectLink" dataType="String" />

</workflow>