<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2020 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://levelsbeyond.com/schema/workflow"
	xmlns:nimbus="http://levelsbeyond.com/schema/workflow/nimbus"
	xsi:schemaLocation="http://levelsbeyond.com/schema/latest http://schema.levelsbeyond.com/latest/studio.xsd"
	id="getMediaShuttlePortal"
	name="Get Media Shuttle Portal"
	executionLabelExpression="Retrieving Media Shuttle portal..."
	subjectDOClassName=""
	showInUserInterface="false"
	resultDataDef="portalId"
	sdkVersion=""
>
    
    <initialStepName>get media shuttle portal</initialStepName>
    
    <submitHttpStep name="get media shuttle portal"
	    urlExpression="${baseMediaShuttlePortalsUrl}/portals"
	    requestMethodExpression="GET"
	    responseCodeDataDef="getPortalIdResponseCode"
	    responsePayloadDataDef="getPortalIdResponse"
	    executionLabelExpression="Requesting Portal ID for Portal: ${getPortalIdResponse.get('items')?.?[#this.get('url').asText().equals(#root.portalName)]?.get(0).get('name').asText()}"
	    pctComplete="15"
    >
        <transition condition="${getPortalIdResponseCode.startsWith('2')}">
            <targetStepName>set portalId</targetStepName>
        </transition>
        <transition condition="${true}">
            <targetStepName>failed to retrieve portal id</targetStepName>
        </transition>
        
        <requestHeader name="Authorization">${mediaShuttleApiKey}</requestHeader>
    </submitHttpStep>
    
    <setContextData name="set portalId"
	    targetDataDef="portalId"
	    valueExpression="${getPortalIdResponse.get('items').?[#this.get('url').asText().equals(#root.portalName)]?.get(0).get('id').asText()}"
	    executionLabelExpression="Portal Id: ${portalId}"
	    nextStep="end"/>
    
    <noopStep name="end" />
    
    <failWorkflowStep name="failed to retrieve portal id"
	    reasonExpression="Failed to retrieve portal ID from MediaShuttle."
	    executionLabelExpression="Failed to retrieve portal ID from MediaShuttle"
    />
	
	<!--Context Data Defs-->
	<!--API responses and codes-->
	<contextDataDef name="getPortalIdResponseCode"    dataType="String"/>
    <contextDataDef name="getPortalIdResponse"        dataType="JSON"/>
    <contextDataDef name="createPackageResponseCode"  dataType="String"/>
    <contextDataDef name="createPackageResponse"      dataType="JSON"/>
	
	<!-- defaults -->
	<contextDataDef name="mediaShuttleApiKey"         dataType="String" hidden="true" required="true" />
    <contextDataDef name="baseMediaShuttlePortalsUrl" dataType="String" required="true" />
	
	<!-- result -->
	<contextDataDef name="portalId"                   dataType="String" />
	
	<!-- config -->
	<contextDataDef name="portalName"                 dataType="String"     defaultDataExpression="${#sysconfig('media.shuttle.portal.name')}" />
</workflow>