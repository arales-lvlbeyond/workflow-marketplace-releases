
<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2019 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  ~
  -->

<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://levelsbeyond.com/schema/workflow"
    xmlns:nimbus="http://levelsbeyond.com/schema/workflow/nimbus"
    xsi:schemaLocation="http://levelsbeyond.com/schema/workflow http://www.levelsbeyond.com/schema/latest/studio.xsd"
    id="transcodeVideoForSigniant"
    name="Transcode Video For Signiant"
    executionLabelExpression="Transcoding video for Signiant transfer..."
    subjectDOClassName="VideoAssetContent"
    showInUserInterface="false"
    sdkVersion=""
    resultDataDef="transcodeResultFile"
>

    <initialStepName>transcode video</initialStepName>
    
    <convertVideoStep name="transcode video"
        executionLabelExpression="Transcoding video ${fileToTranscode.absolutePath} to ${targetTemplateName}"
        mediaConversionTemplateExpression="${targetTemplateName}"
        targetContentTemplateExpression="${targetTemplateName}"
        sourceFileExpression="${fileToTranscode}"
        resultDataDef="transcodeResultFileTemp"
        nextStep="copy transcoded file to unique folder" />
    
    <copyFileStep name="copy transcoded file to unique folder"
        executionLabelExpression="Copy transcoded file to unique folder"
        sourceFileExpression="transcodeResultFileTemp"
        targetDirectoryExpression="${#filepath(transcodeResultFileTemp)}/${#uuid().toString()}"
        targetFilenameExpression="${#baseFilename(fileToTranscode)}.${#extension(transcodeResultFileTemp.name)}"
        resultDataDef="transcodeResultFile"
        nextStep="end" />
    
    <noopStep name="end" />
    
    <!-- INPUT -->
    <contextDataDef name="fileToTranscode" dataType="File" defaultDataExpression="${subject.file}" />
    <contextDataDef name="targetTemplateName" dataType="String" />
    
    <!-- RESULT -->
    <contextDataDef name="transcodeResultFileTemp" dataType="File" />
    <contextDataDef name="transcodeResultFile" dataType="File" />
</workflow>