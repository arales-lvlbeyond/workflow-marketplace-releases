<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2018 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://levelsbeyond.com/schema/workflow"
	xmlns:nimbus="http://levelsbeyond.com/schema/workflow/nimbus"
	xsi:schemaLocation="http://levelsbeyond.com/schema/latest http://levelsbeyond.com/schema/latest/studio.xsd"
	id="exportMetadataAsJson"
	name="Export Metadata As Json"
	executionLabelExpression="Export Metadata As Json"
	subjectDOClassName=""
	showInUserInterface="false"
	resultDataDef="exportFile"
	hasDownload="false"
	sdkVersion=""
	>
	
	<initialStepName>check for export file</initialStepName>
	
	
	<noopStep name="check for export file"
		executionLabelExpression="old file already exists? ${exportFile.exists()}"
		>
		<transition condition="${exportFile.exists()}">
			<targetStepName>delete old file</targetStepName>
		</transition>
		<transition condition="true">
			<targetStepName>create target directory</targetStepName>
		</transition>
	</noopStep>
	
	
	<deleteFileStep name="delete old file"
		executionLabelExpression="deleting old file: ${exportFile.absolutePath}"
		sourceFilesExpression="${exportFile}"
		continueOnException="true"
		>
		<transition condition="${!exportFile.exists()}">
			<targetStepName>create target directory</targetStepName>
		</transition>
		<transition condition="true">
			<targetStepName>delete error</targetStepName>
		</transition>
	</deleteFileStep>
	
	<runCommandStep name="create target directory"
		executionLabelExpression="Creating: ${repositoryPath}/${importPath}"
		executablePathExpression="/bin/mkdir"
		nextStep="create metadata file"
		>
		<arg>-p</arg>
		<arg>${repositoryPath}/${importPath}</arg>
	</runCommandStep>
	
	<runCommandStep name="create metadata file"
		executionLabelExpression="Creating: ${exportFilePath}"
		executablePathExpression="/bin/touch"
		nextStep="add metadata to file"
		>
		<arg>${exportFilePath}</arg>
	</runCommandStep>
	
	
	<groovyStep name="add metadata to file"
		executionLabelExpression="Create metadata JSON file"
		resultDataDef="exportFile"
		continueOnException="true"
		>
		<transition condition="${exportFile.exists()}">
			<targetStepName>end</targetStepName>
		</transition>
		<transition condition="true">
			<targetStepName>export error</targetStepName>
		</transition>
		<script>
        <![CDATA[
			import groovy.json.JsonOutput
			
			new File(exportFilePath).write(JsonOutput.prettyPrint(metadataFormJson.toString()))
			return exportFilePath
		]]>
        </script>
	</groovyStep>
	
	
	<!-- ................................................... End Steps .................................................... -->
	<!-- success -->
	<noopStep name="end"/>
	
	
	<!-- fail -->
	<failWorkflowStep name="delete error"
		reasonExpression="A metadata file already exists and failed to delete"
		executionLabelExpression="A metadata file already exists and failed to delete"
		/>
	
	
	<failWorkflowStep name="export error"
		reasonExpression="Unable to create the metadata file"
		executionLabelExpression="Unable to create the metadata file"
		/>
	
	
	<!-- ................................................... Data Defs .................................................... -->
	<!-- ............ INPUT ............. -->
	<contextDataDef name="packageId"            dataType="String"/>
	<contextDataDef name="metadataFormJson"     dataType="JSON"/>
	
	
	<!-- ......... PROCESSING ........... -->
	<contextDataDef name="exportFilePath"   dataType="String"       defaultDataExpression="${repositoryPath}/${importPath}/${packageId}_metadata.json"/>
	<contextDataDef name="exportFile"       dataType="File"         defaultDataExpression="${exportFilePath}"/>
	
	<contextDataDef name="repositoryPath" dataType="String" />
	<contextDataDef name="importPath" dataType="String" />


</workflow>